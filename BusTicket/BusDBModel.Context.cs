//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusTicket
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BusDBEntities : DbContext
    {
        public BusDBEntities()
            : base("name=BusDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BusInfoTB> BusInfoTBs { get; set; }
        public virtual DbSet<CounterInfoTB> CounterInfoTBs { get; set; }
        public virtual DbSet<DriverInfoTB> DriverInfoTBs { get; set; }
        public virtual DbSet<RouteDetailsTB> RouteDetailsTBs { get; set; }
        public virtual DbSet<RouteInfoTB> RouteInfoTBs { get; set; }
        public virtual DbSet<SuperViseorInfoTB> SuperViseorInfoTBs { get; set; }
        public virtual DbSet<TicketSelesDeteil> TicketSelesDeteils { get; set; }
        public virtual DbSet<TripInfoTB> TripInfoTBs { get; set; }
        public virtual DbSet<TicketSalesInfoTB> TicketSalesInfoTBs { get; set; }
        public virtual DbSet<UserInfoTB> UserInfoTBs { get; set; }
    
        public virtual ObjectResult<GetTripInformation_Result> GetTripInformation(Nullable<int> startCounter, Nullable<int> endCounter, string date)
        {
            var startCounterParameter = startCounter.HasValue ?
                new ObjectParameter("StartCounter", startCounter) :
                new ObjectParameter("StartCounter", typeof(int));
    
            var endCounterParameter = endCounter.HasValue ?
                new ObjectParameter("EndCounter", endCounter) :
                new ObjectParameter("EndCounter", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTripInformation_Result>("GetTripInformation", startCounterParameter, endCounterParameter, dateParameter);
        }
    }
}
